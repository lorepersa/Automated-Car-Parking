/* Generated by AN DISI Unibo */ 
package it.unibo.physicalfan

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Physicalfan ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "init"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		 var is_on = false  
		return { //this:ActionBasciFsm
				state("init") { //this:State
					action { //it:State
						println("[physicalfan] | [State] init | Entry point.")
						println("[physicalfan] | [State] init | Exit point.")
					}
					 transition( edgeName="goto",targetState="running", cond=doswitch() )
				}	 
				state("running") { //this:State
					action { //it:State
						println("[physicalfan] | [State] running | Entry point.")
						println("[physicalfan] | [State] running | Exit point.")
					}
					 transition(edgeName="t07",targetState="turnOnFan",cond=whenDispatch("physical_fan_on"))
					transition(edgeName="t08",targetState="turnOffFan",cond=whenDispatch("physical_fan_off"))
				}	 
				state("turnOnFan") { //this:State
					action { //it:State
						println("[physicalfan] | [State] turnOnFan | Entry point.")
						if( checkMsgContent( Term.createTerm("physical_fan_on(X)"), Term.createTerm("physical_fan_on(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("[physicalfan] | [State] turnOnFan | Turn ON.")
								 is_on = true  
						}
						println("[fan] | [State] turnOnFan | Exit point.")
					}
					 transition( edgeName="goto",targetState="running", cond=doswitch() )
				}	 
				state("turnOffFan") { //this:State
					action { //it:State
						println("[physicalfan] | [State] turnOffFan | Entry point.")
						if( checkMsgContent( Term.createTerm("physical_fan_off(X)"), Term.createTerm("physical_fan_off(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("[physicalfan] | [State] turnOffFan | Turn OFF.")
								 is_on = false  
						}
						println("[physicalfan] | [State] turnOffFan | Exit point.")
					}
					 transition( edgeName="goto",targetState="running", cond=doswitch() )
				}	 
			}
		}
}
