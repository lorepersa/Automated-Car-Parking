/* Generated by AN DISI Unibo */ 
package it.unibo.managercontroller

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Managercontroller ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "init"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
	@kotlinx.coroutines.ExperimentalCoroutinesApi			
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("init") { //this:State
					action { //it:State
					}
					 transition( edgeName="goto",targetState="loop", cond=doswitch() )
				}	 
				state("loop") { //this:State
					action { //it:State
						println("$name in ${currentState.stateName} | $currentMsg")
						if( checkMsgContent( Term.createTerm("manager_fan_automatic_mode(X)"), Term.createTerm("manager_fan_automatic_mode(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("manager_fan_automatic_mode", "manager_fan_automatic_mode(X)" ,"fancontroller" ) 
						}
						if( checkMsgContent( Term.createTerm("manager_fan_manual_mode(X)"), Term.createTerm("manager_fan_manual_mode(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("manager_fan_manual_mode", "manager_fan_manual_mode(X)" ,"fancontroller" ) 
						}
						if( checkMsgContent( Term.createTerm("manager_fan_on(X)"), Term.createTerm("manager_fan_on(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("manager_fan_on", "manager_fan_on(X)" ,"fancontroller" ) 
						}
						if( checkMsgContent( Term.createTerm("manager_fan_off(X)"), Term.createTerm("manager_fan_off(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("manager_fan_off", "manager_fan_off(X)" ,"fancontroller" ) 
						}
						if( checkMsgContent( Term.createTerm("manager_transport_trolley_start(X)"), Term.createTerm("manager_transport_trolley_start(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("transport_trolley_start", "transport_trolley_start(X)" ,"transporttrolley" ) 
						}
						if( checkMsgContent( Term.createTerm("manager_transport_trolley_stop(X)"), Term.createTerm("manager_transport_trolley_stop(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("transport_trolley_stop", "transport_trolley_stop(X)" ,"transporttrolley" ) 
						}
						if( checkMsgContent( Term.createTerm("weightsensor_info_on(X)"), Term.createTerm("weightsensor_info_on(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("weightsensor_info_on", "weightsensor_info_on(X)" ,"statusaggregator" ) 
						}
						if( checkMsgContent( Term.createTerm("weightsensor_info_off(X)"), Term.createTerm("weightsensor_info_off(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("weightsensor_info_off", "weightsensor_info_off(X)" ,"statusaggregator" ) 
						}
						if( checkMsgContent( Term.createTerm("outsonar_info_on(X)"), Term.createTerm("outsonar_info_on(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("outsonar_info_on", "outsonar_info_on(X)" ,"statusaggregator" ) 
						}
						if( checkMsgContent( Term.createTerm("outsonar_info_off(X)"), Term.createTerm("outsonar_info_off(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("outsonar_info_off", "outsonar_info_off(X)" ,"statusaggregator" ) 
						}
					}
					 transition(edgeName="t062",targetState="loop",cond=whenDispatch("manager_fan_automatic_mode"))
					transition(edgeName="t063",targetState="loop",cond=whenDispatch("manager_fan_manual_mode"))
					transition(edgeName="t064",targetState="loop",cond=whenDispatch("manager_fan_on"))
					transition(edgeName="t065",targetState="loop",cond=whenDispatch("manager_fan_off"))
					transition(edgeName="t066",targetState="loop",cond=whenDispatch("manager_transport_trolley_start"))
					transition(edgeName="t067",targetState="loop",cond=whenDispatch("manager_transport_trolley_stop"))
					transition(edgeName="t068",targetState="loop",cond=whenDispatch("weightsensor_info_on"))
					transition(edgeName="t069",targetState="loop",cond=whenDispatch("weightsensor_info_off"))
					transition(edgeName="t070",targetState="loop",cond=whenDispatch("outsonar_info_on"))
					transition(edgeName="t071",targetState="loop",cond=whenDispatch("outsonar_info_off"))
				}	 
			}
		}
}
